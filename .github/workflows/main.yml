name: CI

# Workflow does NOT trigger on a feature branch until a pull request is created.
# Workflow will always run when a pull request is merged to the default branch.
on:
  pull_request: {}
  push:
      branches: ["main"]

permissions:
  contents: read

env:
  PYTHON_VERSION: "3.12"

jobs:
  bandit:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      - uses: actions/setup-python@0a5c61591373683505ea898e09a3ea4f39ef2b9c # v5.0.0
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Install dependencies
        uses: ./.github/actions/install-dependencies
        with:
          test-requirements: "true"

      - name: Run bandit
        run: bandit --ini .bandit -r .

  black:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      - name: Set up Python
        uses: actions/setup-python@0a5c61591373683505ea898e09a3ea4f39ef2b9c # v5.0.0
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Install dependencies
        uses: ./.github/actions/install-dependencies
        with:
          test-requirements: "true"

      - name: Run black
        run: black --check .

  flake8:
    runs-on: ubuntu-latest
    steps:
        - name: Check out code
          uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        - uses: actions/setup-python@0a5c61591373683505ea898e09a3ea4f39ef2b9c # v5.0.0
          with:
            python-version: ${{ env.PYTHON_VERSION }}
        - name: Install dependencies
          uses: ./.github/actions/install-dependencies
          with:
            test-requirements: "true"

        - name: Run flake8
          run: flake8

  isort:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      - uses: actions/setup-python@0a5c61591373683505ea898e09a3ea4f39ef2b9c # v5.0.0
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Install dependencies
        uses: ./.github/actions/install-dependencies
        with:
          requirements: "true"
          test-requirements: "true"

      - name: Run isort
        run: isort --check-only .

  mypy:
    runs-on: ubuntu-latest
    steps:
        - name: Check out code
          uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        - uses: actions/setup-python@0a5c61591373683505ea898e09a3ea4f39ef2b9c # v5.0.0
          with:
            python-version: ${{ env.PYTHON_VERSION }}
        - name: Install dependencies
          uses: ./.github/actions/install-dependencies
          with:
            requirements: "true"
            test-requirements: "true"

        - name: Run mypy
          run: mypy

  renovate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      - name: ðŸ§¼ lint renovate config # Validates changes to renovate.json config file
        uses: suzuki-shunsuke/github-action-renovate-config-validator@b7cd2b598bb51d071a2474e98f55cc25f91abec1 # v0.1.3
        with:
          config_file_path: 'renovate.json'

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]
    steps:
        - name: Check out code
          uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        - uses: actions/setup-python@0a5c61591373683505ea898e09a3ea4f39ef2b9c # v5.0.0
          with:
            python-version: ${{ matrix.python-version }}
        - name: Install dependencies
          uses: ./.github/actions/install-dependencies
          with:
            requirements: "true"
            test-requirements: "true"

        - name: Configure git user
          run: |
            git config --global user.name "TESTING-${GITHUB_ACTOR}"
            git config --global user.email "TESTING-${GITHUB_ACTOR}@example.com"

        - name: Create an ephemeral signing key for testing
          run: gpg --quick-generate-key --batch --passphrase '' "TESTING-${GITHUB_ACTOR} <TESTING-${GITHUB_ACTOR}@example.com>" default sign seconds=600

        - name: Run pytest
          run: pytest --cov-report xml:coverage-${{ matrix.python-version }}.xml --junitxml=test-results-${{ matrix.python-version }}.xml

        - name: Upload pytest test results artifact
          uses: actions/upload-artifact@a8a3f3ad30e3422c9c7b888a15615d19a852ae32 # v3.1.3
          with:
            name: pytest-results-${{ matrix.python-version }}
            path: test-results-${{ matrix.python-version }}.xml
          # Use always() to always run this step to publish test results when there are test failures
          if: ${{ always() }}

        - name: Upload coverage results artifact
          uses: actions/upload-artifact@a8a3f3ad30e3422c9c7b888a15615d19a852ae32 # v3.1.3
          with:
            name: pytest-coverage-${{ matrix.python-version }}
            path: coverage-${{ matrix.python-version }}.xml
          # Use always() to always run this step to publish test results when there are test failures
          if: ${{ always() }}

        - name: Publish coverage results to Codecov
          uses: codecov/codecov-action@eaaf4bedf32dbdc6b720b63067d99c4d77d6047d # v3.1.4
          with:
            file: coverage-${{ matrix.python-version }}.xml
            fail_ci_if_error: true
            token: ${{ secrets.CODECOV_TOKEN }}

  verify-wheel:
    runs-on: ubuntu-latest
    strategy:
          matrix:
            python-version: ["3.9", "3.10", "3.11", "3.12"]
    steps:
      - name: Check out code
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      - uses: actions/setup-python@0a5c61591373683505ea898e09a3ea4f39ef2b9c # v5.0.0
        with:
          python-version: ${{ matrix.python-version }}
      - name: Build wheel
        uses: ./.github/actions/build-dist
      - name: Verify wheel
        uses: ./.github/actions/verify-wheel
        with:
          package-import-name: "hyper_bump_it"
          script-command: "hyper-bump-it --help"


  build-docs:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Check out code
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - uses: actions/setup-python@0a5c61591373683505ea898e09a3ea4f39ef2b9c # v5.0.0
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install dependencies
        uses: ./.github/actions/install-dependencies
        with:
          requirements: "true"
          docs-requirements: "true"

      - name: Build Docs
        run: mkdocs build --strict

      - name: Upload coverage results artifact
        uses: actions/upload-artifact@a8a3f3ad30e3422c9c7b888a15615d19a852ae32 # v3.1.3
        with:
          name: docs-site
          path: site/

  update-dev-docs:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    permissions:
      contents: write
    steps:
      - name: Check out code
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - uses: actions/setup-python@0a5c61591373683505ea898e09a3ea4f39ef2b9c # v5.0.0
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install dependencies
        uses: ./.github/actions/install-dependencies
        with:
          requirements: "true"
          docs-requirements: "true"

      - name: Push documentation changes
        uses: ./.github/actions/publish-docs-with-mike
        with:
          version_name: dev
